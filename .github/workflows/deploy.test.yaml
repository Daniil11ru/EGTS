name: test-deploy

on:
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: egts-receiver
      IMAGE_TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase owner
        run: |
          echo "IMAGE_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract config values
        run: |
          sudo apt-get update -y
          sudo apt-get install -y yq
          APP_PORT=$(yq e '.port' configs/config.docker.yaml | tr -d '"')
          POSTGRES_DB=$(yq e '.storage.postgresql.database' configs/config.docker.yaml | tr -d '"')
          echo "APP_PORT=${APP_PORT}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${POSTGRES_DB}" >> $GITHUB_ENV
          echo "APP_PORT=${APP_PORT}" > .env.deploy
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env.deploy

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.ACTIONS_SSH_KEY }}

      - name: Trust host
        run: ssh-keyscan -H ${{ secrets.TEST_HOST }} >> ~/.ssh/known_hosts

      - name: Create remote context
        run: docker context create ci --docker "host=ssh://deploy@${{ secrets.TEST_HOST }}"

      - name: Compose pull
        run: docker --context ci compose --env-file .env.deploy -f docker-compose.yml pull

      - name: Compose up
        run: docker --context ci compose --env-file .env.deploy -f docker-compose.yml up -d --remove-orphans

      - name: Cleanup context
        if: always()
        run: docker context rm -f ci
